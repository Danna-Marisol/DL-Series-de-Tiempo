name: ML Pipeline - Script Execution

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  execute-scripts:
    name: Execute Python Scripts in Sequence
    runs-on: ubuntu-latest
    timeout-minutes: 45  # Aumentado para MLflow y procesamiento de datos

    steps:
    # Paso 1: Checkout del c√≥digo
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Paso 2: Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Paso 3: Instalar dependencias completas
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pandas scikit-learn matplotlib seaborn tensorflow mlflow gdown pyngrok joblib optuna tqdm python-dotenv
        sudo apt-get update && sudo apt-get install -y unzip

    # Paso 4: Crear estructura de directorios
    - name: Create Directories
      run: |
        mkdir -p data
        mkdir -p mlruns
        mkdir -p output

    # Paso 5: Ejecutar scripts en orden con manejo de errores
    - name: Run Exploratory Analysis
      run: |
        echo "Ejecutando Analisis_exploratorio.py..."
        python scripts/Analisis_exploratorio.py || exit 1

    - name: Run Preprocessing
      run: |
        echo "Ejecutando Preprocesamiento.py..."
        python scripts/Preprocesamiento.py || exit 1

    - name: Run Feature Selection and Training
      run: |
        echo "Ejecutando Entrenamiento_validacion.py..."
        python scripts/Entrenamiento_validacion.py || exit 1

    - name: Run Model Evaluation and Export
      run: |
        echo "Ejecutando Evaluacion_exportacion.py..."
        python scripts/Evaluacion_exportacion.py || exit 1
        # Iniciar MLflow UI en background (solo para debugging)
        nohup mlflow ui --port 5000 --host 0.0.0.0 &

    # Paso 6: Subir resultados como artefactos
    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: ml-pipeline-results
        path: |
          *.pkl
          *.csv
          mlruns/
          output/
          data/processed_*
        retention-days: 2
